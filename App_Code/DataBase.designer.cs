#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKDThoiTrangTheThao")]
public partial class DataBaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertChiTietDonHang(ChiTietDonHang instance);
  partial void UpdateChiTietDonHang(ChiTietDonHang instance);
  partial void DeleteChiTietDonHang(ChiTietDonHang instance);
  partial void InsertTrangThaiDH(TrangThaiDH instance);
  partial void UpdateTrangThaiDH(TrangThaiDH instance);
  partial void DeleteTrangThaiDH(TrangThaiDH instance);
  partial void InsertChiTietNhapHang(ChiTietNhapHang instance);
  partial void UpdateChiTietNhapHang(ChiTietNhapHang instance);
  partial void DeleteChiTietNhapHang(ChiTietNhapHang instance);
  partial void InsertDanhMuc(DanhMuc instance);
  partial void UpdateDanhMuc(DanhMuc instance);
  partial void DeleteDanhMuc(DanhMuc instance);
  partial void InsertDonHang(DonHang instance);
  partial void UpdateDonHang(DonHang instance);
  partial void DeleteDonHang(DonHang instance);
  partial void InsertGiaSanPham(GiaSanPham instance);
  partial void UpdateGiaSanPham(GiaSanPham instance);
  partial void DeleteGiaSanPham(GiaSanPham instance);
  partial void InsertKhachHang(KhachHang instance);
  partial void UpdateKhachHang(KhachHang instance);
  partial void DeleteKhachHang(KhachHang instance);
  partial void InsertKhoHang(KhoHang instance);
  partial void UpdateKhoHang(KhoHang instance);
  partial void DeleteKhoHang(KhoHang instance);
  partial void InsertMau(Mau instance);
  partial void UpdateMau(Mau instance);
  partial void DeleteMau(Mau instance);
  partial void InsertMauSanPham(MauSanPham instance);
  partial void UpdateMauSanPham(MauSanPham instance);
  partial void DeleteMauSanPham(MauSanPham instance);
  partial void InsertNhaCungCap(NhaCungCap instance);
  partial void UpdateNhaCungCap(NhaCungCap instance);
  partial void DeleteNhaCungCap(NhaCungCap instance);
  partial void InsertNhanVien(NhanVien instance);
  partial void UpdateNhanVien(NhanVien instance);
  partial void DeleteNhanVien(NhanVien instance);
  partial void InsertNhapHang(NhapHang instance);
  partial void UpdateNhapHang(NhapHang instance);
  partial void DeleteNhapHang(NhapHang instance);
  partial void InsertSanPham(SanPham instance);
  partial void UpdateSanPham(SanPham instance);
  partial void DeleteSanPham(SanPham instance);
  partial void InsertSize(Size instance);
  partial void UpdateSize(Size instance);
  partial void DeleteSize(Size instance);
  partial void InsertSizeSanPham(SizeSanPham instance);
  partial void UpdateSizeSanPham(SizeSanPham instance);
  partial void DeleteSizeSanPham(SizeSanPham instance);
  partial void InsertTaiKhoanKH(TaiKhoanKH instance);
  partial void UpdateTaiKhoanKH(TaiKhoanKH instance);
  partial void DeleteTaiKhoanKH(TaiKhoanKH instance);
  partial void InsertThuongHieu(ThuongHieu instance);
  partial void UpdateThuongHieu(ThuongHieu instance);
  partial void DeleteThuongHieu(ThuongHieu instance);
  #endregion
	
	public DataBaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
    public DataBaseDataContext() : base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLKDThoiTrangTheThaoConnectionString"].ConnectionString, mappingSource)
    { OnCreated(); }
    public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this.GetTable<ChiTietDonHang>();
		}
	}
	
	public System.Data.Linq.Table<TrangThaiDH> TrangThaiDHs
	{
		get
		{
			return this.GetTable<TrangThaiDH>();
		}
	}
	
	public System.Data.Linq.Table<ChiTietNhapHang> ChiTietNhapHangs
	{
		get
		{
			return this.GetTable<ChiTietNhapHang>();
		}
	}
	
	public System.Data.Linq.Table<DanhMuc> DanhMucs
	{
		get
		{
			return this.GetTable<DanhMuc>();
		}
	}
	
	public System.Data.Linq.Table<DonHang> DonHangs
	{
		get
		{
			return this.GetTable<DonHang>();
		}
	}
	
	public System.Data.Linq.Table<GiaSanPham> GiaSanPhams
	{
		get
		{
			return this.GetTable<GiaSanPham>();
		}
	}
	
	public System.Data.Linq.Table<KhachHang> KhachHangs
	{
		get
		{
			return this.GetTable<KhachHang>();
		}
	}
	
	public System.Data.Linq.Table<KhoHang> KhoHangs
	{
		get
		{
			return this.GetTable<KhoHang>();
		}
	}
	
	public System.Data.Linq.Table<Mau> Maus
	{
		get
		{
			return this.GetTable<Mau>();
		}
	}
	
	public System.Data.Linq.Table<MauSanPham> MauSanPhams
	{
		get
		{
			return this.GetTable<MauSanPham>();
		}
	}
	
	public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
	{
		get
		{
			return this.GetTable<NhaCungCap>();
		}
	}
	
	public System.Data.Linq.Table<NhanVien> NhanViens
	{
		get
		{
			return this.GetTable<NhanVien>();
		}
	}
	
	public System.Data.Linq.Table<NhapHang> NhapHangs
	{
		get
		{
			return this.GetTable<NhapHang>();
		}
	}
	
	public System.Data.Linq.Table<SanPham> SanPhams
	{
		get
		{
			return this.GetTable<SanPham>();
		}
	}
	
	public System.Data.Linq.Table<Size> Sizes
	{
		get
		{
			return this.GetTable<Size>();
		}
	}
	
	public System.Data.Linq.Table<SizeSanPham> SizeSanPhams
	{
		get
		{
			return this.GetTable<SizeSanPham>();
		}
	}
	
	public System.Data.Linq.Table<TaiKhoanKH> TaiKhoanKHs
	{
		get
		{
			return this.GetTable<TaiKhoanKH>();
		}
	}
	
	public System.Data.Linq.Table<ThuongHieu> ThuongHieus
	{
		get
		{
			return this.GetTable<ThuongHieu>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idChiTietDH;
	
	private string _MaDH;
	
	private string _MaSP;
	
	private System.Nullable<int> _SoLuong;
	
	private System.Nullable<decimal> _Gia;
	
	private EntityRef<DonHang> _DonHang;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChiTietDHChanging(int value);
    partial void OnidChiTietDHChanged();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    #endregion
	
	public ChiTietDonHang()
	{
		this._DonHang = default(EntityRef<DonHang>);
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idChiTietDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idChiTietDH
	{
		get
		{
			return this._idChiTietDH;
		}
		set
		{
			if ((this._idChiTietDH != value))
			{
				this.OnidChiTietDHChanging(value);
				this.SendPropertyChanging();
				this._idChiTietDH = value;
				this.SendPropertyChanged("idChiTietDH");
				this.OnidChiTietDHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaDH
	{
		get
		{
			return this._MaDH;
		}
		set
		{
			if ((this._MaDH != value))
			{
				if (this._DonHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaDHChanging(value);
				this.SendPropertyChanging();
				this._MaDH = value;
				this.SendPropertyChanged("MaDH");
				this.OnMaDHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
	public System.Nullable<int> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(19,3)")]
	public System.Nullable<decimal> Gia
	{
		get
		{
			return this._Gia;
		}
		set
		{
			if ((this._Gia != value))
			{
				this.OnGiaChanging(value);
				this.SendPropertyChanging();
				this._Gia = value;
				this.SendPropertyChanged("Gia");
				this.OnGiaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public DonHang DonHang
	{
		get
		{
			return this._DonHang.Entity;
		}
		set
		{
			DonHang previousValue = this._DonHang.Entity;
			if (((previousValue != value) 
						|| (this._DonHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DonHang.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._DonHang.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._MaDH = value.MaDH;
				}
				else
				{
					this._MaDH = default(string);
				}
				this.SendPropertyChanged("DonHang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._MaSP = value.MaSP;
				}
				else
				{
					this._MaSP = default(string);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiDH")]
public partial class TrangThaiDH : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaDH;
	
	private System.DateTime _ThoiGian;
	
	private string _TrangThai;
	
	private EntityRef<DonHang> _DonHang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnThoiGianChanging(System.DateTime value);
    partial void OnThoiGianChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
	
	public TrangThaiDH()
	{
		this._DonHang = default(EntityRef<DonHang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaDH
	{
		get
		{
			return this._MaDH;
		}
		set
		{
			if ((this._MaDH != value))
			{
				if (this._DonHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaDHChanging(value);
				this.SendPropertyChanging();
				this._MaDH = value;
				this.SendPropertyChanged("MaDH");
				this.OnMaDHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
	public System.DateTime ThoiGian
	{
		get
		{
			return this._ThoiGian;
		}
		set
		{
			if ((this._ThoiGian != value))
			{
				this.OnThoiGianChanging(value);
				this.SendPropertyChanging();
				this._ThoiGian = value;
				this.SendPropertyChanged("ThoiGian");
				this.OnThoiGianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(255)")]
	public string TrangThai
	{
		get
		{
			return this._TrangThai;
		}
		set
		{
			if ((this._TrangThai != value))
			{
				this.OnTrangThaiChanging(value);
				this.SendPropertyChanging();
				this._TrangThai = value;
				this.SendPropertyChanged("TrangThai");
				this.OnTrangThaiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_TrangThaiDH", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public DonHang DonHang
	{
		get
		{
			return this._DonHang.Entity;
		}
		set
		{
			DonHang previousValue = this._DonHang.Entity;
			if (((previousValue != value) 
						|| (this._DonHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DonHang.Entity = null;
					previousValue.TrangThaiDHs.Remove(this);
				}
				this._DonHang.Entity = value;
				if ((value != null))
				{
					value.TrangThaiDHs.Add(this);
					this._MaDH = value.MaDH;
				}
				else
				{
					this._MaDH = default(string);
				}
				this.SendPropertyChanged("DonHang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietNhapHang")]
public partial class ChiTietNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaPhieuNhap;
	
	private string _MaSP;
	
	private System.Nullable<int> _SoLuong;
	
	private System.Nullable<decimal> _GiaNhap;
	
	private EntityRef<NhapHang> _NhapHang;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuNhapChanging(string value);
    partial void OnMaPhieuNhapChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaNhapChanging(System.Nullable<decimal> value);
    partial void OnGiaNhapChanged();
    #endregion
	
	public ChiTietNhapHang()
	{
		this._NhapHang = default(EntityRef<NhapHang>);
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaPhieuNhap
	{
		get
		{
			return this._MaPhieuNhap;
		}
		set
		{
			if ((this._MaPhieuNhap != value))
			{
				if (this._NhapHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaPhieuNhapChanging(value);
				this.SendPropertyChanging();
				this._MaPhieuNhap = value;
				this.SendPropertyChanged("MaPhieuNhap");
				this.OnMaPhieuNhapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
	public System.Nullable<int> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Decimal(19,3)")]
	public System.Nullable<decimal> GiaNhap
	{
		get
		{
			return this._GiaNhap;
		}
		set
		{
			if ((this._GiaNhap != value))
			{
				this.OnGiaNhapChanging(value);
				this.SendPropertyChanging();
				this._GiaNhap = value;
				this.SendPropertyChanged("GiaNhap");
				this.OnGiaNhapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_ChiTietNhapHang", Storage="_NhapHang", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public NhapHang NhapHang
	{
		get
		{
			return this._NhapHang.Entity;
		}
		set
		{
			NhapHang previousValue = this._NhapHang.Entity;
			if (((previousValue != value) 
						|| (this._NhapHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhapHang.Entity = null;
					previousValue.ChiTietNhapHangs.Remove(this);
				}
				this._NhapHang.Entity = value;
				if ((value != null))
				{
					value.ChiTietNhapHangs.Add(this);
					this._MaPhieuNhap = value.MaPhieuNhap;
				}
				else
				{
					this._MaPhieuNhap = default(string);
				}
				this.SendPropertyChanged("NhapHang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietNhapHang", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.ChiTietNhapHangs.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.ChiTietNhapHangs.Add(this);
					this._MaSP = value.MaSP;
				}
				else
				{
					this._MaSP = default(string);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idDanhMuc;
	
	private string _TenDanhMuc;
	
	private EntitySet<SanPham> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDanhMucChanging(int value);
    partial void OnidDanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
	
	public DanhMuc()
	{
		this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idDanhMuc
	{
		get
		{
			return this._idDanhMuc;
		}
		set
		{
			if ((this._idDanhMuc != value))
			{
				this.OnidDanhMucChanging(value);
				this.SendPropertyChanging();
				this._idDanhMuc = value;
				this.SendPropertyChanged("idDanhMuc");
				this.OnidDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string TenDanhMuc
	{
		get
		{
			return this._TenDanhMuc;
		}
		set
		{
			if ((this._TenDanhMuc != value))
			{
				this.OnTenDanhMucChanging(value);
				this.SendPropertyChanging();
				this._TenDanhMuc = value;
				this.SendPropertyChanged("TenDanhMuc");
				this.OnTenDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_SanPhams", ThisKey="idDanhMuc", OtherKey="idDanhMuc")]
	public EntitySet<SanPham> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.DanhMuc = this;
	}
	
	private void detach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.DanhMuc = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaDH;
	
	private string _MaKH;
	
	private string _MaNV;
	
	private System.Nullable<System.DateTime> _NgayDat;
	
	private System.Nullable<decimal> _TongTien;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntitySet<TrangThaiDH> _TrangThaiDHs;
	
	private EntityRef<KhachHang> _KhachHang;
	
	private EntityRef<NhanVien> _NhanVien;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
	
	public DonHang()
	{
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._TrangThaiDHs = new EntitySet<TrangThaiDH>(new Action<TrangThaiDH>(this.attach_TrangThaiDHs), new Action<TrangThaiDH>(this.detach_TrangThaiDHs));
		this._KhachHang = default(EntityRef<KhachHang>);
		this._NhanVien = default(EntityRef<NhanVien>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaDH
	{
		get
		{
			return this._MaDH;
		}
		set
		{
			if ((this._MaDH != value))
			{
				this.OnMaDHChanging(value);
				this.SendPropertyChanging();
				this._MaDH = value;
				this.SendPropertyChanged("MaDH");
				this.OnMaDHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaKH
	{
		get
		{
			return this._MaKH;
		}
		set
		{
			if ((this._MaKH != value))
			{
				if (this._KhachHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKHChanging(value);
				this.SendPropertyChanging();
				this._MaKH = value;
				this.SendPropertyChanged("MaKH");
				this.OnMaKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaNV
	{
		get
		{
			return this._MaNV;
		}
		set
		{
			if ((this._MaNV != value))
			{
				if (this._NhanVien.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNVChanging(value);
				this.SendPropertyChanging();
				this._MaNV = value;
				this.SendPropertyChanged("MaNV");
				this.OnMaNVChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
	public System.Nullable<System.DateTime> NgayDat
	{
		get
		{
			return this._NgayDat;
		}
		set
		{
			if ((this._NgayDat != value))
			{
				this.OnNgayDatChanging(value);
				this.SendPropertyChanging();
				this._NgayDat = value;
				this.SendPropertyChanged("NgayDat");
				this.OnNgayDatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(19,3)")]
	public System.Nullable<decimal> TongTien
	{
		get
		{
			return this._TongTien;
		}
		set
		{
			if ((this._TongTien != value))
			{
				this.OnTongTienChanging(value);
				this.SendPropertyChanging();
				this._TongTien = value;
				this.SendPropertyChanged("TongTien");
				this.OnTongTienChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="MaDH", OtherKey="MaDH")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_TrangThaiDH", Storage="_TrangThaiDHs", ThisKey="MaDH", OtherKey="MaDH")]
	public EntitySet<TrangThaiDH> TrangThaiDHs
	{
		get
		{
			return this._TrangThaiDHs;
		}
		set
		{
			this._TrangThaiDHs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public KhachHang KhachHang
	{
		get
		{
			return this._KhachHang.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang.Entity = null;
					previousValue.DonHangs.Remove(this);
				}
				this._KhachHang.Entity = value;
				if ((value != null))
				{
					value.DonHangs.Add(this);
					this._MaKH = value.MaKH;
				}
				else
				{
					this._MaKH = default(string);
				}
				this.SendPropertyChanged("KhachHang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public NhanVien NhanVien
	{
		get
		{
			return this._NhanVien.Entity;
		}
		set
		{
			NhanVien previousValue = this._NhanVien.Entity;
			if (((previousValue != value) 
						|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhanVien.Entity = null;
					previousValue.DonHangs.Remove(this);
				}
				this._NhanVien.Entity = value;
				if ((value != null))
				{
					value.DonHangs.Add(this);
					this._MaNV = value.MaNV;
				}
				else
				{
					this._MaNV = default(string);
				}
				this.SendPropertyChanged("NhanVien");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = null;
	}
	
	private void attach_TrangThaiDHs(TrangThaiDH entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = this;
	}
	
	private void detach_TrangThaiDHs(TrangThaiDH entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaSanPham")]
public partial class GiaSanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idGiaSP;
	
	private System.Nullable<decimal> _Gia;
	
	private System.Nullable<System.DateTime> _NgayBatDau;
	
	private System.Nullable<System.DateTime> _NgayKetThuc;
	
	private string _MaSP;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGiaSPChanging(int value);
    partial void OnidGiaSPChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
	
	public GiaSanPham()
	{
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGiaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idGiaSP
	{
		get
		{
			return this._idGiaSP;
		}
		set
		{
			if ((this._idGiaSP != value))
			{
				this.OnidGiaSPChanging(value);
				this.SendPropertyChanging();
				this._idGiaSP = value;
				this.SendPropertyChanged("idGiaSP");
				this.OnidGiaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(19,3)")]
	public System.Nullable<decimal> Gia
	{
		get
		{
			return this._Gia;
		}
		set
		{
			if ((this._Gia != value))
			{
				this.OnGiaChanging(value);
				this.SendPropertyChanging();
				this._Gia = value;
				this.SendPropertyChanged("Gia");
				this.OnGiaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime")]
	public System.Nullable<System.DateTime> NgayBatDau
	{
		get
		{
			return this._NgayBatDau;
		}
		set
		{
			if ((this._NgayBatDau != value))
			{
				this.OnNgayBatDauChanging(value);
				this.SendPropertyChanging();
				this._NgayBatDau = value;
				this.SendPropertyChanged("NgayBatDau");
				this.OnNgayBatDauChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime")]
	public System.Nullable<System.DateTime> NgayKetThuc
	{
		get
		{
			return this._NgayKetThuc;
		}
		set
		{
			if ((this._NgayKetThuc != value))
			{
				this.OnNgayKetThucChanging(value);
				this.SendPropertyChanging();
				this._NgayKetThuc = value;
				this.SendPropertyChanged("NgayKetThuc");
				this.OnNgayKetThucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10)")]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiaSanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.GiaSanPhams.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.GiaSanPhams.Add(this);
					this._MaSP = value.MaSP;
				}
				else
				{
					this._MaSP = default(string);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaKH;
	
	private string _TenKH;
	
	private string _SDT;
	
	private string _DiaChi;
	
	private string _Email;
	
	private EntitySet<DonHang> _DonHangs;
	
	private EntitySet<TaiKhoanKH> _TaiKhoanKHs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public KhachHang()
	{
		this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
		this._TaiKhoanKHs = new EntitySet<TaiKhoanKH>(new Action<TaiKhoanKH>(this.attach_TaiKhoanKHs), new Action<TaiKhoanKH>(this.detach_TaiKhoanKHs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaKH
	{
		get
		{
			return this._MaKH;
		}
		set
		{
			if ((this._MaKH != value))
			{
				this.OnMaKHChanging(value);
				this.SendPropertyChanging();
				this._MaKH = value;
				this.SendPropertyChanged("MaKH");
				this.OnMaKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string TenKH
	{
		get
		{
			return this._TenKH;
		}
		set
		{
			if ((this._TenKH != value))
			{
				this.OnTenKHChanging(value);
				this.SendPropertyChanging();
				this._TenKH = value;
				this.SendPropertyChanged("TenKH");
				this.OnTenKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
	public string SDT
	{
		get
		{
			return this._SDT;
		}
		set
		{
			if ((this._SDT != value))
			{
				this.OnSDTChanging(value);
				this.SendPropertyChanging();
				this._SDT = value;
				this.SendPropertyChanged("SDT");
				this.OnSDTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="MaKH", OtherKey="MaKH")]
	public EntitySet<DonHang> DonHangs
	{
		get
		{
			return this._DonHangs;
		}
		set
		{
			this._DonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TaiKhoanKH", Storage="_TaiKhoanKHs", ThisKey="MaKH", OtherKey="MaKH")]
	public EntitySet<TaiKhoanKH> TaiKhoanKHs
	{
		get
		{
			return this._TaiKhoanKHs;
		}
		set
		{
			this._TaiKhoanKHs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = this;
	}
	
	private void detach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = null;
	}
	
	private void attach_TaiKhoanKHs(TaiKhoanKH entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = this;
	}
	
	private void detach_TaiKhoanKHs(TaiKhoanKH entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoHang")]
public partial class KhoHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaKho;
	
	private string _TenKho;
	
	private string _DiaChi;
	
	private EntitySet<SanPham> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoChanging(string value);
    partial void OnMaKhoChanged();
    partial void OnTenKhoChanging(string value);
    partial void OnTenKhoChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
	
	public KhoHang()
	{
		this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaKho
	{
		get
		{
			return this._MaKho;
		}
		set
		{
			if ((this._MaKho != value))
			{
				this.OnMaKhoChanging(value);
				this.SendPropertyChanging();
				this._MaKho = value;
				this.SendPropertyChanged("MaKho");
				this.OnMaKhoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKho", DbType="NVarChar(255)")]
	public string TenKho
	{
		get
		{
			return this._TenKho;
		}
		set
		{
			if ((this._TenKho != value))
			{
				this.OnTenKhoChanging(value);
				this.SendPropertyChanging();
				this._TenKho = value;
				this.SendPropertyChanged("TenKho");
				this.OnTenKhoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoHang_SanPham", Storage="_SanPhams", ThisKey="MaKho", OtherKey="MaKho")]
	public EntitySet<SanPham> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.KhoHang = this;
	}
	
	private void detach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.KhoHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mau")]
public partial class Mau : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idMau;
	
	private string _Mau1;
	
	private EntitySet<MauSanPham> _MauSanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMauChanging(int value);
    partial void OnidMauChanged();
    partial void OnMau1Changing(string value);
    partial void OnMau1Changed();
    #endregion
	
	public Mau()
	{
		this._MauSanPhams = new EntitySet<MauSanPham>(new Action<MauSanPham>(this.attach_MauSanPhams), new Action<MauSanPham>(this.detach_MauSanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMau", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idMau
	{
		get
		{
			return this._idMau;
		}
		set
		{
			if ((this._idMau != value))
			{
				this.OnidMauChanging(value);
				this.SendPropertyChanging();
				this._idMau = value;
				this.SendPropertyChanged("idMau");
				this.OnidMauChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Mau", Storage="_Mau1", DbType="VarChar(50)")]
	public string Mau1
	{
		get
		{
			return this._Mau1;
		}
		set
		{
			if ((this._Mau1 != value))
			{
				this.OnMau1Changing(value);
				this.SendPropertyChanging();
				this._Mau1 = value;
				this.SendPropertyChanged("Mau1");
				this.OnMau1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mau_MauSanPham", Storage="_MauSanPhams", ThisKey="idMau", OtherKey="idMau")]
	public EntitySet<MauSanPham> MauSanPhams
	{
		get
		{
			return this._MauSanPhams;
		}
		set
		{
			this._MauSanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MauSanPhams(MauSanPham entity)
	{
		this.SendPropertyChanging();
		entity.Mau = this;
	}
	
	private void detach_MauSanPhams(MauSanPham entity)
	{
		this.SendPropertyChanging();
		entity.Mau = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MauSanPham")]
public partial class MauSanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idMau;
	
	private string _MaSP;
	
	private System.Nullable<int> _SoLuong;
	
	private EntityRef<Mau> _Mau;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMauChanging(int value);
    partial void OnidMauChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
	
	public MauSanPham()
	{
		this._Mau = default(EntityRef<Mau>);
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMau", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int idMau
	{
		get
		{
			return this._idMau;
		}
		set
		{
			if ((this._idMau != value))
			{
				if (this._Mau.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidMauChanging(value);
				this.SendPropertyChanging();
				this._idMau = value;
				this.SendPropertyChanged("idMau");
				this.OnidMauChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
	public System.Nullable<int> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mau_MauSanPham", Storage="_Mau", ThisKey="idMau", OtherKey="idMau", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Mau Mau
	{
		get
		{
			return this._Mau.Entity;
		}
		set
		{
			Mau previousValue = this._Mau.Entity;
			if (((previousValue != value) 
						|| (this._Mau.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Mau.Entity = null;
					previousValue.MauSanPhams.Remove(this);
				}
				this._Mau.Entity = value;
				if ((value != null))
				{
					value.MauSanPhams.Add(this);
					this._idMau = value.idMau;
				}
				else
				{
					this._idMau = default(int);
				}
				this.SendPropertyChanged("Mau");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MauSanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.MauSanPhams.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.MauSanPhams.Add(this);
					this._MaSP = value.MaSP;
				}
				else
				{
					this._MaSP = default(string);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaNhaCC;
	
	private string _TenNhaCC;
	
	private string _DiaChi;
	
	private string _SDT;
	
	private string _Email;
	
	private EntitySet<NhapHang> _NhapHangs;
	
	private EntitySet<ThuongHieu> _ThuongHieus;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCCChanging(string value);
    partial void OnMaNhaCCChanged();
    partial void OnTenNhaCCChanging(string value);
    partial void OnTenNhaCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public NhaCungCap()
	{
		this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
		this._ThuongHieus = new EntitySet<ThuongHieu>(new Action<ThuongHieu>(this.attach_ThuongHieus), new Action<ThuongHieu>(this.detach_ThuongHieus));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaNhaCC
	{
		get
		{
			return this._MaNhaCC;
		}
		set
		{
			if ((this._MaNhaCC != value))
			{
				this.OnMaNhaCCChanging(value);
				this.SendPropertyChanging();
				this._MaNhaCC = value;
				this.SendPropertyChanged("MaNhaCC");
				this.OnMaNhaCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCC", DbType="NVarChar(255)")]
	public string TenNhaCC
	{
		get
		{
			return this._TenNhaCC;
		}
		set
		{
			if ((this._TenNhaCC != value))
			{
				this.OnTenNhaCCChanging(value);
				this.SendPropertyChanging();
				this._TenNhaCC = value;
				this.SendPropertyChanged("TenNhaCC");
				this.OnTenNhaCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
	public string SDT
	{
		get
		{
			return this._SDT;
		}
		set
		{
			if ((this._SDT != value))
			{
				this.OnSDTChanging(value);
				this.SendPropertyChanging();
				this._SDT = value;
				this.SendPropertyChanged("SDT");
				this.OnSDTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapHang", Storage="_NhapHangs", ThisKey="MaNhaCC", OtherKey="MaNhaCC")]
	public EntitySet<NhapHang> NhapHangs
	{
		get
		{
			return this._NhapHangs;
		}
		set
		{
			this._NhapHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_ThuongHieu", Storage="_ThuongHieus", ThisKey="MaNhaCC", OtherKey="MaNhaCC")]
	public EntitySet<ThuongHieu> ThuongHieus
	{
		get
		{
			return this._ThuongHieus;
		}
		set
		{
			this._ThuongHieus.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NhapHangs(NhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = this;
	}
	
	private void detach_NhapHangs(NhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = null;
	}
	
	private void attach_ThuongHieus(ThuongHieu entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = this;
	}
	
	private void detach_ThuongHieus(ThuongHieu entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaNV;
	
	private string _HoTen;
	
	private System.Nullable<System.DateTime> _NgaySinh;
	
	private string _GioiTinh;
	
	private string _DiaChi;
	
	private string _SDT;
	
	private string _Email;
	
	private string _ChucVu;
	
	private System.Nullable<decimal> _Luong;
	
	private EntitySet<DonHang> _DonHangs;
	
	private EntitySet<NhapHang> _NhapHangs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnLuongChanging(System.Nullable<decimal> value);
    partial void OnLuongChanged();
    #endregion
	
	public NhanVien()
	{
		this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
		this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaNV
	{
		get
		{
			return this._MaNV;
		}
		set
		{
			if ((this._MaNV != value))
			{
				this.OnMaNVChanging(value);
				this.SendPropertyChanging();
				this._MaNV = value;
				this.SendPropertyChanged("MaNV");
				this.OnMaNVChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string HoTen
	{
		get
		{
			return this._HoTen;
		}
		set
		{
			if ((this._HoTen != value))
			{
				this.OnHoTenChanging(value);
				this.SendPropertyChanging();
				this._HoTen = value;
				this.SendPropertyChanged("HoTen");
				this.OnHoTenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
	public System.Nullable<System.DateTime> NgaySinh
	{
		get
		{
			return this._NgaySinh;
		}
		set
		{
			if ((this._NgaySinh != value))
			{
				this.OnNgaySinhChanging(value);
				this.SendPropertyChanging();
				this._NgaySinh = value;
				this.SendPropertyChanged("NgaySinh");
				this.OnNgaySinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
	public string GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
	public string SDT
	{
		get
		{
			return this._SDT;
		}
		set
		{
			if ((this._SDT != value))
			{
				this.OnSDTChanging(value);
				this.SendPropertyChanging();
				this._SDT = value;
				this.SendPropertyChanged("SDT");
				this.OnSDTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
	public string ChucVu
	{
		get
		{
			return this._ChucVu;
		}
		set
		{
			if ((this._ChucVu != value))
			{
				this.OnChucVuChanging(value);
				this.SendPropertyChanging();
				this._ChucVu = value;
				this.SendPropertyChanged("ChucVu");
				this.OnChucVuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Decimal(19,3)")]
	public System.Nullable<decimal> Luong
	{
		get
		{
			return this._Luong;
		}
		set
		{
			if ((this._Luong != value))
			{
				this.OnLuongChanging(value);
				this.SendPropertyChanging();
				this._Luong = value;
				this.SendPropertyChanged("Luong");
				this.OnLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonHang", Storage="_DonHangs", ThisKey="MaNV", OtherKey="MaNV")]
	public EntitySet<DonHang> DonHangs
	{
		get
		{
			return this._DonHangs;
		}
		set
		{
			this._DonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhapHang", Storage="_NhapHangs", ThisKey="MaNV", OtherKey="MaNV")]
	public EntitySet<NhapHang> NhapHangs
	{
		get
		{
			return this._NhapHangs;
		}
		set
		{
			this._NhapHangs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = this;
	}
	
	private void detach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = null;
	}
	
	private void attach_NhapHangs(NhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = this;
	}
	
	private void detach_NhapHangs(NhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapHang")]
public partial class NhapHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaPhieuNhap;
	
	private System.Nullable<System.DateTime> _NgayNhap;
	
	private string _MaNV;
	
	private string _MaNhaCC;
	
	private EntitySet<ChiTietNhapHang> _ChiTietNhapHangs;
	
	private EntityRef<NhaCungCap> _NhaCungCap;
	
	private EntityRef<NhanVien> _NhanVien;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuNhapChanging(string value);
    partial void OnMaPhieuNhapChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaNhaCCChanging(string value);
    partial void OnMaNhaCCChanged();
    #endregion
	
	public NhapHang()
	{
		this._ChiTietNhapHangs = new EntitySet<ChiTietNhapHang>(new Action<ChiTietNhapHang>(this.attach_ChiTietNhapHangs), new Action<ChiTietNhapHang>(this.detach_ChiTietNhapHangs));
		this._NhaCungCap = default(EntityRef<NhaCungCap>);
		this._NhanVien = default(EntityRef<NhanVien>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaPhieuNhap
	{
		get
		{
			return this._MaPhieuNhap;
		}
		set
		{
			if ((this._MaPhieuNhap != value))
			{
				this.OnMaPhieuNhapChanging(value);
				this.SendPropertyChanging();
				this._MaPhieuNhap = value;
				this.SendPropertyChanged("MaPhieuNhap");
				this.OnMaPhieuNhapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime")]
	public System.Nullable<System.DateTime> NgayNhap
	{
		get
		{
			return this._NgayNhap;
		}
		set
		{
			if ((this._NgayNhap != value))
			{
				this.OnNgayNhapChanging(value);
				this.SendPropertyChanging();
				this._NgayNhap = value;
				this.SendPropertyChanged("NgayNhap");
				this.OnNgayNhapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
	public string MaNV
	{
		get
		{
			return this._MaNV;
		}
		set
		{
			if ((this._MaNV != value))
			{
				if (this._NhanVien.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNVChanging(value);
				this.SendPropertyChanging();
				this._MaNV = value;
				this.SendPropertyChanged("MaNV");
				this.OnMaNVChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCC", DbType="VarChar(10)")]
	public string MaNhaCC
	{
		get
		{
			return this._MaNhaCC;
		}
		set
		{
			if ((this._MaNhaCC != value))
			{
				if (this._NhaCungCap.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNhaCCChanging(value);
				this.SendPropertyChanging();
				this._MaNhaCC = value;
				this.SendPropertyChanged("MaNhaCC");
				this.OnMaNhaCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_ChiTietNhapHang", Storage="_ChiTietNhapHangs", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap")]
	public EntitySet<ChiTietNhapHang> ChiTietNhapHangs
	{
		get
		{
			return this._ChiTietNhapHangs;
		}
		set
		{
			this._ChiTietNhapHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapHang", Storage="_NhaCungCap", ThisKey="MaNhaCC", OtherKey="MaNhaCC", IsForeignKey=true, DeleteRule="CASCADE")]
	public NhaCungCap NhaCungCap
	{
		get
		{
			return this._NhaCungCap.Entity;
		}
		set
		{
			NhaCungCap previousValue = this._NhaCungCap.Entity;
			if (((previousValue != value) 
						|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhaCungCap.Entity = null;
					previousValue.NhapHangs.Remove(this);
				}
				this._NhaCungCap.Entity = value;
				if ((value != null))
				{
					value.NhapHangs.Add(this);
					this._MaNhaCC = value.MaNhaCC;
				}
				else
				{
					this._MaNhaCC = default(string);
				}
				this.SendPropertyChanged("NhaCungCap");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhapHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteRule="CASCADE")]
	public NhanVien NhanVien
	{
		get
		{
			return this._NhanVien.Entity;
		}
		set
		{
			NhanVien previousValue = this._NhanVien.Entity;
			if (((previousValue != value) 
						|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhanVien.Entity = null;
					previousValue.NhapHangs.Remove(this);
				}
				this._NhanVien.Entity = value;
				if ((value != null))
				{
					value.NhapHangs.Add(this);
					this._MaNV = value.MaNV;
				}
				else
				{
					this._MaNV = default(string);
				}
				this.SendPropertyChanged("NhanVien");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietNhapHangs(ChiTietNhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhapHang = this;
	}
	
	private void detach_ChiTietNhapHangs(ChiTietNhapHang entity)
	{
		this.SendPropertyChanging();
		entity.NhapHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaSP;
	
	private string _TenSP;
	
	private string _Mota;
	
	private string _HinhAnh;
	
	private string _GioiTinh;
	
	private System.Nullable<int> _idDanhMuc;
	
	private System.Nullable<int> _idThuongHieu;
	
	private string _MaKho;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntitySet<ChiTietNhapHang> _ChiTietNhapHangs;
	
	private EntitySet<GiaSanPham> _GiaSanPhams;
	
	private EntitySet<MauSanPham> _MauSanPhams;
	
	private EntitySet<SizeSanPham> _SizeSanPhams;
	
	private EntityRef<DanhMuc> _DanhMuc;
	
	private EntityRef<KhoHang> _KhoHang;
	
	private EntityRef<ThuongHieu> _ThuongHieu;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnidDanhMucChanging(System.Nullable<int> value);
    partial void OnidDanhMucChanged();
    partial void OnidThuongHieuChanging(System.Nullable<int> value);
    partial void OnidThuongHieuChanged();
    partial void OnMaKhoChanging(string value);
    partial void OnMaKhoChanged();
    #endregion
	
	public SanPham()
	{
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._ChiTietNhapHangs = new EntitySet<ChiTietNhapHang>(new Action<ChiTietNhapHang>(this.attach_ChiTietNhapHangs), new Action<ChiTietNhapHang>(this.detach_ChiTietNhapHangs));
		this._GiaSanPhams = new EntitySet<GiaSanPham>(new Action<GiaSanPham>(this.attach_GiaSanPhams), new Action<GiaSanPham>(this.detach_GiaSanPhams));
		this._MauSanPhams = new EntitySet<MauSanPham>(new Action<MauSanPham>(this.attach_MauSanPhams), new Action<MauSanPham>(this.detach_MauSanPhams));
		this._SizeSanPhams = new EntitySet<SizeSanPham>(new Action<SizeSanPham>(this.attach_SizeSanPhams), new Action<SizeSanPham>(this.detach_SizeSanPhams));
		this._DanhMuc = default(EntityRef<DanhMuc>);
		this._KhoHang = default(EntityRef<KhoHang>);
		this._ThuongHieu = default(EntityRef<ThuongHieu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string TenSP
	{
		get
		{
			return this._TenSP;
		}
		set
		{
			if ((this._TenSP != value))
			{
				this.OnTenSPChanging(value);
				this.SendPropertyChanging();
				this._TenSP = value;
				this.SendPropertyChanged("TenSP");
				this.OnTenSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
	public string Mota
	{
		get
		{
			return this._Mota;
		}
		set
		{
			if ((this._Mota != value))
			{
				this.OnMotaChanging(value);
				this.SendPropertyChanging();
				this._Mota = value;
				this.SendPropertyChanged("Mota");
				this.OnMotaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(MAX)")]
	public string HinhAnh
	{
		get
		{
			return this._HinhAnh;
		}
		set
		{
			if ((this._HinhAnh != value))
			{
				this.OnHinhAnhChanging(value);
				this.SendPropertyChanging();
				this._HinhAnh = value;
				this.SendPropertyChanged("HinhAnh");
				this.OnHinhAnhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(50)")]
	public string GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDanhMuc", DbType="Int")]
	public System.Nullable<int> idDanhMuc
	{
		get
		{
			return this._idDanhMuc;
		}
		set
		{
			if ((this._idDanhMuc != value))
			{
				if (this._DanhMuc.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidDanhMucChanging(value);
				this.SendPropertyChanging();
				this._idDanhMuc = value;
				this.SendPropertyChanged("idDanhMuc");
				this.OnidDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThuongHieu", DbType="Int")]
	public System.Nullable<int> idThuongHieu
	{
		get
		{
			return this._idThuongHieu;
		}
		set
		{
			if ((this._idThuongHieu != value))
			{
				if (this._ThuongHieu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidThuongHieuChanging(value);
				this.SendPropertyChanging();
				this._idThuongHieu = value;
				this.SendPropertyChanged("idThuongHieu");
				this.OnidThuongHieuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaKho
	{
		get
		{
			return this._MaKho;
		}
		set
		{
			if ((this._MaKho != value))
			{
				if (this._KhoHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKhoChanging(value);
				this.SendPropertyChanging();
				this._MaKho = value;
				this.SendPropertyChanged("MaKho");
				this.OnMaKhoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="MaSP", OtherKey="MaSP")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietNhapHang", Storage="_ChiTietNhapHangs", ThisKey="MaSP", OtherKey="MaSP")]
	public EntitySet<ChiTietNhapHang> ChiTietNhapHangs
	{
		get
		{
			return this._ChiTietNhapHangs;
		}
		set
		{
			this._ChiTietNhapHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiaSanPham", Storage="_GiaSanPhams", ThisKey="MaSP", OtherKey="MaSP")]
	public EntitySet<GiaSanPham> GiaSanPhams
	{
		get
		{
			return this._GiaSanPhams;
		}
		set
		{
			this._GiaSanPhams.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MauSanPham", Storage="_MauSanPhams", ThisKey="MaSP", OtherKey="MaSP")]
	public EntitySet<MauSanPham> MauSanPhams
	{
		get
		{
			return this._MauSanPhams;
		}
		set
		{
			this._MauSanPhams.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SizeSanPham", Storage="_SizeSanPhams", ThisKey="MaSP", OtherKey="MaSP")]
	public EntitySet<SizeSanPham> SizeSanPhams
	{
		get
		{
			return this._SizeSanPhams;
		}
		set
		{
			this._SizeSanPhams.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_DanhMuc", ThisKey="idDanhMuc", OtherKey="idDanhMuc", IsForeignKey=true, DeleteRule="CASCADE")]
	public DanhMuc DanhMuc
	{
		get
		{
			return this._DanhMuc.Entity;
		}
		set
		{
			DanhMuc previousValue = this._DanhMuc.Entity;
			if (((previousValue != value) 
						|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DanhMuc.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._DanhMuc.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._idDanhMuc = value.idDanhMuc;
				}
				else
				{
					this._idDanhMuc = default(Nullable<int>);
				}
				this.SendPropertyChanged("DanhMuc");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoHang_SanPham", Storage="_KhoHang", ThisKey="MaKho", OtherKey="MaKho", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public KhoHang KhoHang
	{
		get
		{
			return this._KhoHang.Entity;
		}
		set
		{
			KhoHang previousValue = this._KhoHang.Entity;
			if (((previousValue != value) 
						|| (this._KhoHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhoHang.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._KhoHang.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._MaKho = value.MaKho;
				}
				else
				{
					this._MaKho = default(string);
				}
				this.SendPropertyChanged("KhoHang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="idThuongHieu", OtherKey="idThuongHieu", IsForeignKey=true, DeleteRule="CASCADE")]
	public ThuongHieu ThuongHieu
	{
		get
		{
			return this._ThuongHieu.Entity;
		}
		set
		{
			ThuongHieu previousValue = this._ThuongHieu.Entity;
			if (((previousValue != value) 
						|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ThuongHieu.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._ThuongHieu.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._idThuongHieu = value.idThuongHieu;
				}
				else
				{
					this._idThuongHieu = default(Nullable<int>);
				}
				this.SendPropertyChanged("ThuongHieu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
	
	private void attach_ChiTietNhapHangs(ChiTietNhapHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_ChiTietNhapHangs(ChiTietNhapHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
	
	private void attach_GiaSanPhams(GiaSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_GiaSanPhams(GiaSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
	
	private void attach_MauSanPhams(MauSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_MauSanPhams(MauSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
	
	private void attach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size")]
public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idSize;
	
	private string _Size1;
	
	private EntitySet<SizeSanPham> _SizeSanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSizeChanging(int value);
    partial void OnidSizeChanged();
    partial void OnSize1Changing(string value);
    partial void OnSize1Changed();
    #endregion
	
	public Size()
	{
		this._SizeSanPhams = new EntitySet<SizeSanPham>(new Action<SizeSanPham>(this.attach_SizeSanPhams), new Action<SizeSanPham>(this.detach_SizeSanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSize", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idSize
	{
		get
		{
			return this._idSize;
		}
		set
		{
			if ((this._idSize != value))
			{
				this.OnidSizeChanging(value);
				this.SendPropertyChanging();
				this._idSize = value;
				this.SendPropertyChanged("idSize");
				this.OnidSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Size", Storage="_Size1", DbType="VarChar(10)")]
	public string Size1
	{
		get
		{
			return this._Size1;
		}
		set
		{
			if ((this._Size1 != value))
			{
				this.OnSize1Changing(value);
				this.SendPropertyChanging();
				this._Size1 = value;
				this.SendPropertyChanged("Size1");
				this.OnSize1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SizeSanPham", Storage="_SizeSanPhams", ThisKey="idSize", OtherKey="idSize")]
	public EntitySet<SizeSanPham> SizeSanPhams
	{
		get
		{
			return this._SizeSanPhams;
		}
		set
		{
			this._SizeSanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.Size = this;
	}
	
	private void detach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.Size = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SizeSanPham")]
public partial class SizeSanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idSize;
	
	private string _MaSP;
	
	private System.Nullable<int> _SoLuong;
	
	private EntityRef<SanPham> _SanPham;
	
	private EntityRef<Size> _Size;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSizeChanging(int value);
    partial void OnidSizeChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
	
	public SizeSanPham()
	{
		this._SanPham = default(EntityRef<SanPham>);
		this._Size = default(EntityRef<Size>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int idSize
	{
		get
		{
			return this._idSize;
		}
		set
		{
			if ((this._idSize != value))
			{
				if (this._Size.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidSizeChanging(value);
				this.SendPropertyChanging();
				this._idSize = value;
				this.SendPropertyChanged("idSize");
				this.OnidSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaSP
	{
		get
		{
			return this._MaSP;
		}
		set
		{
			if ((this._MaSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSPChanging(value);
				this.SendPropertyChanging();
				this._MaSP = value;
				this.SendPropertyChanged("MaSP");
				this.OnMaSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
	public System.Nullable<int> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SizeSanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.SizeSanPhams.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.SizeSanPhams.Add(this);
					this._MaSP = value.MaSP;
				}
				else
				{
					this._MaSP = default(string);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SizeSanPham", Storage="_Size", ThisKey="idSize", OtherKey="idSize", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Size Size
	{
		get
		{
			return this._Size.Entity;
		}
		set
		{
			Size previousValue = this._Size.Entity;
			if (((previousValue != value) 
						|| (this._Size.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Size.Entity = null;
					previousValue.SizeSanPhams.Remove(this);
				}
				this._Size.Entity = value;
				if ((value != null))
				{
					value.SizeSanPhams.Add(this);
					this._idSize = value.idSize;
				}
				else
				{
					this._idSize = default(int);
				}
				this.SendPropertyChanged("Size");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoanKH")]
public partial class TaiKhoanKH : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idTaiKhoan;
	
	private string _TenDangNhap;
	
	private string _MatKhau;
	
	private string _MaKH;
	
	private EntityRef<KhachHang> _KhachHang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaiKhoanChanging(int value);
    partial void OnidTaiKhoanChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    #endregion
	
	public TaiKhoanKH()
	{
		this._KhachHang = default(EntityRef<KhachHang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idTaiKhoan
	{
		get
		{
			return this._idTaiKhoan;
		}
		set
		{
			if ((this._idTaiKhoan != value))
			{
				this.OnidTaiKhoanChanging(value);
				this.SendPropertyChanging();
				this._idTaiKhoan = value;
				this.SendPropertyChanged("idTaiKhoan");
				this.OnidTaiKhoanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TenDangNhap
	{
		get
		{
			return this._TenDangNhap;
		}
		set
		{
			if ((this._TenDangNhap != value))
			{
				this.OnTenDangNhapChanging(value);
				this.SendPropertyChanging();
				this._TenDangNhap = value;
				this.SendPropertyChanged("TenDangNhap");
				this.OnTenDangNhapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string MatKhau
	{
		get
		{
			return this._MatKhau;
		}
		set
		{
			if ((this._MatKhau != value))
			{
				this.OnMatKhauChanging(value);
				this.SendPropertyChanging();
				this._MatKhau = value;
				this.SendPropertyChanged("MatKhau");
				this.OnMatKhauChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaKH
	{
		get
		{
			return this._MaKH;
		}
		set
		{
			if ((this._MaKH != value))
			{
				if (this._KhachHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKHChanging(value);
				this.SendPropertyChanging();
				this._MaKH = value;
				this.SendPropertyChanged("MaKH");
				this.OnMaKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TaiKhoanKH", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public KhachHang KhachHang
	{
		get
		{
			return this._KhachHang.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang.Entity = null;
					previousValue.TaiKhoanKHs.Remove(this);
				}
				this._KhachHang.Entity = value;
				if ((value != null))
				{
					value.TaiKhoanKHs.Add(this);
					this._MaKH = value.MaKH;
				}
				else
				{
					this._MaKH = default(string);
				}
				this.SendPropertyChanged("KhachHang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idThuongHieu;
	
	private string _TenThuongHieu;
	
	private string _MaNhaCC;
	
	private EntitySet<SanPham> _SanPhams;
	
	private EntityRef<NhaCungCap> _NhaCungCap;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThuongHieuChanging(int value);
    partial void OnidThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    partial void OnMaNhaCCChanging(string value);
    partial void OnMaNhaCCChanged();
    #endregion
	
	public ThuongHieu()
	{
		this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
		this._NhaCungCap = default(EntityRef<NhaCungCap>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThuongHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idThuongHieu
	{
		get
		{
			return this._idThuongHieu;
		}
		set
		{
			if ((this._idThuongHieu != value))
			{
				this.OnidThuongHieuChanging(value);
				this.SendPropertyChanging();
				this._idThuongHieu = value;
				this.SendPropertyChanged("idThuongHieu");
				this.OnidThuongHieuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(255)")]
	public string TenThuongHieu
	{
		get
		{
			return this._TenThuongHieu;
		}
		set
		{
			if ((this._TenThuongHieu != value))
			{
				this.OnTenThuongHieuChanging(value);
				this.SendPropertyChanging();
				this._TenThuongHieu = value;
				this.SendPropertyChanged("TenThuongHieu");
				this.OnTenThuongHieuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaNhaCC
	{
		get
		{
			return this._MaNhaCC;
		}
		set
		{
			if ((this._MaNhaCC != value))
			{
				if (this._NhaCungCap.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNhaCCChanging(value);
				this.SendPropertyChanging();
				this._MaNhaCC = value;
				this.SendPropertyChanged("MaNhaCC");
				this.OnMaNhaCCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="idThuongHieu", OtherKey="idThuongHieu")]
	public EntitySet<SanPham> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_ThuongHieu", Storage="_NhaCungCap", ThisKey="MaNhaCC", OtherKey="MaNhaCC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public NhaCungCap NhaCungCap
	{
		get
		{
			return this._NhaCungCap.Entity;
		}
		set
		{
			NhaCungCap previousValue = this._NhaCungCap.Entity;
			if (((previousValue != value) 
						|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhaCungCap.Entity = null;
					previousValue.ThuongHieus.Remove(this);
				}
				this._NhaCungCap.Entity = value;
				if ((value != null))
				{
					value.ThuongHieus.Add(this);
					this._MaNhaCC = value.MaNhaCC;
				}
				else
				{
					this._MaNhaCC = default(string);
				}
				this.SendPropertyChanged("NhaCungCap");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.ThuongHieu = this;
	}
	
	private void detach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.ThuongHieu = null;
	}
}
#pragma warning restore 1591
