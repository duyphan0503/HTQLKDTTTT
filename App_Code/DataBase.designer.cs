#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HTQLKDTTTT")]
public partial class DataBaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBaoCao(BaoCao instance);
  partial void UpdateBaoCao(BaoCao instance);
  partial void DeleteBaoCao(BaoCao instance);
  partial void InsertThuongHieu(ThuongHieu instance);
  partial void UpdateThuongHieu(ThuongHieu instance);
  partial void DeleteThuongHieu(ThuongHieu instance);
  partial void InsertChiTietDonHang(ChiTietDonHang instance);
  partial void UpdateChiTietDonHang(ChiTietDonHang instance);
  partial void DeleteChiTietDonHang(ChiTietDonHang instance);
  partial void InsertDanhMuc(DanhMuc instance);
  partial void UpdateDanhMuc(DanhMuc instance);
  partial void DeleteDanhMuc(DanhMuc instance);
  partial void InsertDonHang(DonHang instance);
  partial void UpdateDonHang(DonHang instance);
  partial void DeleteDonHang(DonHang instance);
  partial void InsertKhachHang(KhachHang instance);
  partial void UpdateKhachHang(KhachHang instance);
  partial void DeleteKhachHang(KhachHang instance);
  partial void InsertSanPham(SanPham instance);
  partial void UpdateSanPham(SanPham instance);
  partial void DeleteSanPham(SanPham instance);
  partial void InsertSizeSanPham(SizeSanPham instance);
  partial void UpdateSizeSanPham(SizeSanPham instance);
  partial void DeleteSizeSanPham(SizeSanPham instance);
  partial void InsertThongKe(ThongKe instance);
  partial void UpdateThongKe(ThongKe instance);
  partial void DeleteThongKe(ThongKe instance);
  #endregion
	
	public DataBaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<BaoCao> BaoCaos
	{
		get
		{
			return this.GetTable<BaoCao>();
		}
	}
	
	public System.Data.Linq.Table<ThuongHieu> ThuongHieus
	{
		get
		{
			return this.GetTable<ThuongHieu>();
		}
	}
	
	public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this.GetTable<ChiTietDonHang>();
		}
	}
	
	public System.Data.Linq.Table<DanhMuc> DanhMucs
	{
		get
		{
			return this.GetTable<DanhMuc>();
		}
	}
	
	public System.Data.Linq.Table<DonHang> DonHangs
	{
		get
		{
			return this.GetTable<DonHang>();
		}
	}
	
	public System.Data.Linq.Table<KhachHang> KhachHangs
	{
		get
		{
			return this.GetTable<KhachHang>();
		}
	}
	
	public System.Data.Linq.Table<SanPham> SanPhams
	{
		get
		{
			return this.GetTable<SanPham>();
		}
	}
	
	public System.Data.Linq.Table<SizeSanPham> SizeSanPhams
	{
		get
		{
			return this.GetTable<SizeSanPham>();
		}
	}
	
	public System.Data.Linq.Table<ThongKe> ThongKes
	{
		get
		{
			return this.GetTable<ThongKe>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoCao")]
public partial class BaoCao : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idBaoCao;
	
	private System.Nullable<System.DateTime> _ThoiGian;
	
	private string _NoiDung;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBaoCaoChanging(int value);
    partial void OnidBaoCaoChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
	
	public BaoCao()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaoCao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idBaoCao
	{
		get
		{
			return this._idBaoCao;
		}
		set
		{
			if ((this._idBaoCao != value))
			{
				this.OnidBaoCaoChanging(value);
				this.SendPropertyChanging();
				this._idBaoCao = value;
				this.SendPropertyChanged("idBaoCao");
				this.OnidBaoCaoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Date")]
	public System.Nullable<System.DateTime> ThoiGian
	{
		get
		{
			return this._ThoiGian;
		}
		set
		{
			if ((this._ThoiGian != value))
			{
				this.OnThoiGianChanging(value);
				this.SendPropertyChanging();
				this._ThoiGian = value;
				this.SendPropertyChanged("ThoiGian");
				this.OnThoiGianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
	public string NoiDung
	{
		get
		{
			return this._NoiDung;
		}
		set
		{
			if ((this._NoiDung != value))
			{
				this.OnNoiDungChanging(value);
				this.SendPropertyChanging();
				this._NoiDung = value;
				this.SendPropertyChanged("NoiDung");
				this.OnNoiDungChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idThuongHieu;
	
	private string _TenDanhMuc;
	
	private EntitySet<SanPham> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThuongHieuChanging(int value);
    partial void OnidThuongHieuChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
	
	public ThuongHieu()
	{
		this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThuongHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idThuongHieu
	{
		get
		{
			return this._idThuongHieu;
		}
		set
		{
			if ((this._idThuongHieu != value))
			{
				this.OnidThuongHieuChanging(value);
				this.SendPropertyChanging();
				this._idThuongHieu = value;
				this.SendPropertyChanged("idThuongHieu");
				this.OnidThuongHieuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenDanhMuc
	{
		get
		{
			return this._TenDanhMuc;
		}
		set
		{
			if ((this._TenDanhMuc != value))
			{
				this.OnTenDanhMucChanging(value);
				this.SendPropertyChanging();
				this._TenDanhMuc = value;
				this.SendPropertyChanged("TenDanhMuc");
				this.OnTenDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="idThuongHieu", OtherKey="idThuongHieu")]
	public EntitySet<SanPham> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.ThuongHieu = this;
	}
	
	private void detach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.ThuongHieu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idChiTietDH;
	
	private System.Nullable<int> _idDonHang;
	
	private System.Nullable<int> _idSP;
	
	private System.Nullable<int> _SoLuong;
	
	private System.Nullable<decimal> _TongTien;
	
	private EntityRef<DonHang> _DonHang;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChiTietDHChanging(int value);
    partial void OnidChiTietDHChanged();
    partial void OnidDonHangChanging(System.Nullable<int> value);
    partial void OnidDonHangChanged();
    partial void OnidSPChanging(System.Nullable<int> value);
    partial void OnidSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
	
	public ChiTietDonHang()
	{
		this._DonHang = default(EntityRef<DonHang>);
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idChiTietDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idChiTietDH
	{
		get
		{
			return this._idChiTietDH;
		}
		set
		{
			if ((this._idChiTietDH != value))
			{
				this.OnidChiTietDHChanging(value);
				this.SendPropertyChanging();
				this._idChiTietDH = value;
				this.SendPropertyChanged("idChiTietDH");
				this.OnidChiTietDHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDonHang", DbType="Int")]
	public System.Nullable<int> idDonHang
	{
		get
		{
			return this._idDonHang;
		}
		set
		{
			if ((this._idDonHang != value))
			{
				if (this._DonHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidDonHangChanging(value);
				this.SendPropertyChanging();
				this._idDonHang = value;
				this.SendPropertyChanged("idDonHang");
				this.OnidDonHangChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", DbType="Int")]
	public System.Nullable<int> idSP
	{
		get
		{
			return this._idSP;
		}
		set
		{
			if ((this._idSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidSPChanging(value);
				this.SendPropertyChanging();
				this._idSP = value;
				this.SendPropertyChanged("idSP");
				this.OnidSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
	public System.Nullable<int> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Money")]
	public System.Nullable<decimal> TongTien
	{
		get
		{
			return this._TongTien;
		}
		set
		{
			if ((this._TongTien != value))
			{
				this.OnTongTienChanging(value);
				this.SendPropertyChanging();
				this._TongTien = value;
				this.SendPropertyChanged("TongTien");
				this.OnTongTienChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="idDonHang", OtherKey="idDonHang", IsForeignKey=true)]
	public DonHang DonHang
	{
		get
		{
			return this._DonHang.Entity;
		}
		set
		{
			DonHang previousValue = this._DonHang.Entity;
			if (((previousValue != value) 
						|| (this._DonHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DonHang.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._DonHang.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._idDonHang = value.idDonHang;
				}
				else
				{
					this._idDonHang = default(Nullable<int>);
				}
				this.SendPropertyChanged("DonHang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="idSP", OtherKey="idSP", IsForeignKey=true)]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._idSP = value.idSP;
				}
				else
				{
					this._idSP = default(Nullable<int>);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idDanhMuc;
	
	private string _TenDanhMuc;
	
	private EntitySet<SanPham> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDanhMucChanging(int value);
    partial void OnidDanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
	
	public DanhMuc()
	{
		this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idDanhMuc
	{
		get
		{
			return this._idDanhMuc;
		}
		set
		{
			if ((this._idDanhMuc != value))
			{
				this.OnidDanhMucChanging(value);
				this.SendPropertyChanging();
				this._idDanhMuc = value;
				this.SendPropertyChanged("idDanhMuc");
				this.OnidDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenDanhMuc
	{
		get
		{
			return this._TenDanhMuc;
		}
		set
		{
			if ((this._TenDanhMuc != value))
			{
				this.OnTenDanhMucChanging(value);
				this.SendPropertyChanging();
				this._TenDanhMuc = value;
				this.SendPropertyChanged("TenDanhMuc");
				this.OnTenDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_SanPhams", ThisKey="idDanhMuc", OtherKey="idDanhMuc")]
	public EntitySet<SanPham> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.DanhMuc = this;
	}
	
	private void detach_SanPhams(SanPham entity)
	{
		this.SendPropertyChanging();
		entity.DanhMuc = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idDonHang;
	
	private System.Nullable<int> _idKH;
	
	private System.Nullable<System.DateTime> _NgayDat;
	
	private string _TrangThai;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntityRef<KhachHang> _KhachHang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDonHangChanging(int value);
    partial void OnidDonHangChanged();
    partial void OnidKHChanging(System.Nullable<int> value);
    partial void OnidKHChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
	
	public DonHang()
	{
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._KhachHang = default(EntityRef<KhachHang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idDonHang
	{
		get
		{
			return this._idDonHang;
		}
		set
		{
			if ((this._idDonHang != value))
			{
				this.OnidDonHangChanging(value);
				this.SendPropertyChanging();
				this._idDonHang = value;
				this.SendPropertyChanged("idDonHang");
				this.OnidDonHangChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKH", DbType="Int")]
	public System.Nullable<int> idKH
	{
		get
		{
			return this._idKH;
		}
		set
		{
			if ((this._idKH != value))
			{
				if (this._KhachHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidKHChanging(value);
				this.SendPropertyChanging();
				this._idKH = value;
				this.SendPropertyChanged("idKH");
				this.OnidKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
	public System.Nullable<System.DateTime> NgayDat
	{
		get
		{
			return this._NgayDat;
		}
		set
		{
			if ((this._NgayDat != value))
			{
				this.OnNgayDatChanging(value);
				this.SendPropertyChanging();
				this._NgayDat = value;
				this.SendPropertyChanged("NgayDat");
				this.OnNgayDatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(100)")]
	public string TrangThai
	{
		get
		{
			return this._TrangThai;
		}
		set
		{
			if ((this._TrangThai != value))
			{
				this.OnTrangThaiChanging(value);
				this.SendPropertyChanging();
				this._TrangThai = value;
				this.SendPropertyChanged("TrangThai");
				this.OnTrangThaiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="idDonHang", OtherKey="idDonHang")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="idKH", OtherKey="idKH", IsForeignKey=true)]
	public KhachHang KhachHang
	{
		get
		{
			return this._KhachHang.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang.Entity = null;
					previousValue.DonHangs.Remove(this);
				}
				this._KhachHang.Entity = value;
				if ((value != null))
				{
					value.DonHangs.Add(this);
					this._idKH = value.idKH;
				}
				else
				{
					this._idKH = default(Nullable<int>);
				}
				this.SendPropertyChanged("KhachHang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idKH;
	
	private string _TenKH;
	
	private string _SDT;
	
	private string _DiaChi;
	
	private string _Email;
	
	private EntitySet<DonHang> _DonHangs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidKHChanging(int value);
    partial void OnidKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public KhachHang()
	{
		this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idKH
	{
		get
		{
			return this._idKH;
		}
		set
		{
			if ((this._idKH != value))
			{
				this.OnidKHChanging(value);
				this.SendPropertyChanging();
				this._idKH = value;
				this.SendPropertyChanged("idKH");
				this.OnidKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string TenKH
	{
		get
		{
			return this._TenKH;
		}
		set
		{
			if ((this._TenKH != value))
			{
				this.OnTenKHChanging(value);
				this.SendPropertyChanging();
				this._TenKH = value;
				this.SendPropertyChanged("TenKH");
				this.OnTenKHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
	public string SDT
	{
		get
		{
			return this._SDT;
		}
		set
		{
			if ((this._SDT != value))
			{
				this.OnSDTChanging(value);
				this.SendPropertyChanging();
				this._SDT = value;
				this.SendPropertyChanged("SDT");
				this.OnSDTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="idKH", OtherKey="idKH")]
	public EntitySet<DonHang> DonHangs
	{
		get
		{
			return this._DonHangs;
		}
		set
		{
			this._DonHangs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = this;
	}
	
	private void detach_DonHangs(DonHang entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idSP;
	
	private string _TenSP;
	
	private string _Mota;
	
	private decimal _Gia;
	
	private string _HinhAnh;
	
	private System.Nullable<int> _SoLuongTon;
	
	private System.Nullable<int> _idDanhMuc;
	
	private System.Nullable<int> _idThuongHieu;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntitySet<SizeSanPham> _SizeSanPhams;
	
	private EntityRef<DanhMuc> _DanhMuc;
	
	private EntityRef<ThuongHieu> _ThuongHieu;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSPChanging(int value);
    partial void OnidSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnidDanhMucChanging(System.Nullable<int> value);
    partial void OnidDanhMucChanged();
    partial void OnidThuongHieuChanging(System.Nullable<int> value);
    partial void OnidThuongHieuChanged();
    #endregion
	
	public SanPham()
	{
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._SizeSanPhams = new EntitySet<SizeSanPham>(new Action<SizeSanPham>(this.attach_SizeSanPhams), new Action<SizeSanPham>(this.detach_SizeSanPhams));
		this._DanhMuc = default(EntityRef<DanhMuc>);
		this._ThuongHieu = default(EntityRef<ThuongHieu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idSP
	{
		get
		{
			return this._idSP;
		}
		set
		{
			if ((this._idSP != value))
			{
				this.OnidSPChanging(value);
				this.SendPropertyChanging();
				this._idSP = value;
				this.SendPropertyChanged("idSP");
				this.OnidSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string TenSP
	{
		get
		{
			return this._TenSP;
		}
		set
		{
			if ((this._TenSP != value))
			{
				this.OnTenSPChanging(value);
				this.SendPropertyChanging();
				this._TenSP = value;
				this.SendPropertyChanged("TenSP");
				this.OnTenSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Mota
	{
		get
		{
			return this._Mota;
		}
		set
		{
			if ((this._Mota != value))
			{
				this.OnMotaChanging(value);
				this.SendPropertyChanging();
				this._Mota = value;
				this.SendPropertyChanged("Mota");
				this.OnMotaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money NOT NULL")]
	public decimal Gia
	{
		get
		{
			return this._Gia;
		}
		set
		{
			if ((this._Gia != value))
			{
				this.OnGiaChanging(value);
				this.SendPropertyChanging();
				this._Gia = value;
				this.SendPropertyChanged("Gia");
				this.OnGiaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(255)")]
	public string HinhAnh
	{
		get
		{
			return this._HinhAnh;
		}
		set
		{
			if ((this._HinhAnh != value))
			{
				this.OnHinhAnhChanging(value);
				this.SendPropertyChanging();
				this._HinhAnh = value;
				this.SendPropertyChanged("HinhAnh");
				this.OnHinhAnhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
	public System.Nullable<int> SoLuongTon
	{
		get
		{
			return this._SoLuongTon;
		}
		set
		{
			if ((this._SoLuongTon != value))
			{
				this.OnSoLuongTonChanging(value);
				this.SendPropertyChanging();
				this._SoLuongTon = value;
				this.SendPropertyChanged("SoLuongTon");
				this.OnSoLuongTonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDanhMuc", DbType="Int")]
	public System.Nullable<int> idDanhMuc
	{
		get
		{
			return this._idDanhMuc;
		}
		set
		{
			if ((this._idDanhMuc != value))
			{
				if (this._DanhMuc.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidDanhMucChanging(value);
				this.SendPropertyChanging();
				this._idDanhMuc = value;
				this.SendPropertyChanged("idDanhMuc");
				this.OnidDanhMucChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThuongHieu", DbType="Int")]
	public System.Nullable<int> idThuongHieu
	{
		get
		{
			return this._idThuongHieu;
		}
		set
		{
			if ((this._idThuongHieu != value))
			{
				if (this._ThuongHieu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidThuongHieuChanging(value);
				this.SendPropertyChanging();
				this._idThuongHieu = value;
				this.SendPropertyChanged("idThuongHieu");
				this.OnidThuongHieuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="idSP", OtherKey="idSP")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SizeSanPham", Storage="_SizeSanPhams", ThisKey="idSP", OtherKey="idSP")]
	public EntitySet<SizeSanPham> SizeSanPhams
	{
		get
		{
			return this._SizeSanPhams;
		}
		set
		{
			this._SizeSanPhams.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_DanhMuc", ThisKey="idDanhMuc", OtherKey="idDanhMuc", IsForeignKey=true)]
	public DanhMuc DanhMuc
	{
		get
		{
			return this._DanhMuc.Entity;
		}
		set
		{
			DanhMuc previousValue = this._DanhMuc.Entity;
			if (((previousValue != value) 
						|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DanhMuc.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._DanhMuc.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._idDanhMuc = value.idDanhMuc;
				}
				else
				{
					this._idDanhMuc = default(Nullable<int>);
				}
				this.SendPropertyChanged("DanhMuc");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="idThuongHieu", OtherKey="idThuongHieu", IsForeignKey=true)]
	public ThuongHieu ThuongHieu
	{
		get
		{
			return this._ThuongHieu.Entity;
		}
		set
		{
			ThuongHieu previousValue = this._ThuongHieu.Entity;
			if (((previousValue != value) 
						|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ThuongHieu.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._ThuongHieu.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._idThuongHieu = value.idThuongHieu;
				}
				else
				{
					this._idThuongHieu = default(Nullable<int>);
				}
				this.SendPropertyChanged("ThuongHieu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
	
	private void attach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = this;
	}
	
	private void detach_SizeSanPhams(SizeSanPham entity)
	{
		this.SendPropertyChanging();
		entity.SanPham = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SizeSanPham")]
public partial class SizeSanPham : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idSizeSP;
	
	private System.Nullable<int> _idSP;
	
	private string _Size;
	
	private System.Nullable<int> _SoLuongTon;
	
	private EntityRef<SanPham> _SanPham;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSizeSPChanging(int value);
    partial void OnidSizeSPChanged();
    partial void OnidSPChanging(System.Nullable<int> value);
    partial void OnidSPChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    #endregion
	
	public SizeSanPham()
	{
		this._SanPham = default(EntityRef<SanPham>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSizeSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idSizeSP
	{
		get
		{
			return this._idSizeSP;
		}
		set
		{
			if ((this._idSizeSP != value))
			{
				this.OnidSizeSPChanging(value);
				this.SendPropertyChanging();
				this._idSizeSP = value;
				this.SendPropertyChanged("idSizeSP");
				this.OnidSizeSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", DbType="Int")]
	public System.Nullable<int> idSP
	{
		get
		{
			return this._idSP;
		}
		set
		{
			if ((this._idSP != value))
			{
				if (this._SanPham.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidSPChanging(value);
				this.SendPropertyChanging();
				this._idSP = value;
				this.SendPropertyChanged("idSP");
				this.OnidSPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(10)")]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
	public System.Nullable<int> SoLuongTon
	{
		get
		{
			return this._SoLuongTon;
		}
		set
		{
			if ((this._SoLuongTon != value))
			{
				this.OnSoLuongTonChanging(value);
				this.SendPropertyChanging();
				this._SoLuongTon = value;
				this.SendPropertyChanged("SoLuongTon");
				this.OnSoLuongTonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SizeSanPham", Storage="_SanPham", ThisKey="idSP", OtherKey="idSP", IsForeignKey=true)]
	public SanPham SanPham
	{
		get
		{
			return this._SanPham.Entity;
		}
		set
		{
			SanPham previousValue = this._SanPham.Entity;
			if (((previousValue != value) 
						|| (this._SanPham.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham.Entity = null;
					previousValue.SizeSanPhams.Remove(this);
				}
				this._SanPham.Entity = value;
				if ((value != null))
				{
					value.SizeSanPhams.Add(this);
					this._idSP = value.idSP;
				}
				else
				{
					this._idSP = default(Nullable<int>);
				}
				this.SendPropertyChanged("SanPham");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongKe")]
public partial class ThongKe : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idThongKe;
	
	private System.Nullable<System.DateTime> _ThoiGian;
	
	private System.Nullable<decimal> _DoanhSo;
	
	private System.Nullable<decimal> _LoiNhuan;
	
	private System.Nullable<int> _TonKho;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThongKeChanging(int value);
    partial void OnidThongKeChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnDoanhSoChanging(System.Nullable<decimal> value);
    partial void OnDoanhSoChanged();
    partial void OnLoiNhuanChanging(System.Nullable<decimal> value);
    partial void OnLoiNhuanChanged();
    partial void OnTonKhoChanging(System.Nullable<int> value);
    partial void OnTonKhoChanged();
    #endregion
	
	public ThongKe()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThongKe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idThongKe
	{
		get
		{
			return this._idThongKe;
		}
		set
		{
			if ((this._idThongKe != value))
			{
				this.OnidThongKeChanging(value);
				this.SendPropertyChanging();
				this._idThongKe = value;
				this.SendPropertyChanged("idThongKe");
				this.OnidThongKeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Date")]
	public System.Nullable<System.DateTime> ThoiGian
	{
		get
		{
			return this._ThoiGian;
		}
		set
		{
			if ((this._ThoiGian != value))
			{
				this.OnThoiGianChanging(value);
				this.SendPropertyChanging();
				this._ThoiGian = value;
				this.SendPropertyChanged("ThoiGian");
				this.OnThoiGianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanhSo", DbType="Money")]
	public System.Nullable<decimal> DoanhSo
	{
		get
		{
			return this._DoanhSo;
		}
		set
		{
			if ((this._DoanhSo != value))
			{
				this.OnDoanhSoChanging(value);
				this.SendPropertyChanging();
				this._DoanhSo = value;
				this.SendPropertyChanged("DoanhSo");
				this.OnDoanhSoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoiNhuan", DbType="Money")]
	public System.Nullable<decimal> LoiNhuan
	{
		get
		{
			return this._LoiNhuan;
		}
		set
		{
			if ((this._LoiNhuan != value))
			{
				this.OnLoiNhuanChanging(value);
				this.SendPropertyChanging();
				this._LoiNhuan = value;
				this.SendPropertyChanged("LoiNhuan");
				this.OnLoiNhuanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonKho", DbType="Int")]
	public System.Nullable<int> TonKho
	{
		get
		{
			return this._TonKho;
		}
		set
		{
			if ((this._TonKho != value))
			{
				this.OnTonKhoChanging(value);
				this.SendPropertyChanging();
				this._TonKho = value;
				this.SendPropertyChanged("TonKho");
				this.OnTonKhoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
